"use strict";(self.webpackChunkiggy_website=self.webpackChunkiggy_website||[]).push([[512],{6619:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"connectors/connectors-runtime","title":"Runtime","description":"Runtime is responsible for managing the lifecycle of the connectors and providing the necessary infrastructure for the connectors to run.","source":"@site/docs/connectors/runtime.md","sourceDirName":"connectors","slug":"/connectors/runtime","permalink":"/docs/connectors/runtime","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"connectors-runtime","slug":"/connectors/runtime","title":"Runtime","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/docs/connectors/introduction"},"next":{"title":"SDK","permalink":"/docs/connectors/sdk"}}');var s=t(4848),i=t(8453);const r={id:"connectors-runtime",slug:"/connectors/runtime",title:"Runtime",sidebar_position:2},c=void 0,a={},l=[{value:"HTTP API",id:"http-api",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Runtime is responsible for managing the lifecycle of the connectors and providing the necessary infrastructure for the connectors to run."}),"\n",(0,s.jsxs)(n.p,{children:["The runtime uses a shared ",(0,s.jsx)(n.a,{href:"https://tokio.rs",children:"Tokio runtime"})," to manage the asynchronous tasks and events across all connectors. Additionally, it has built-in support for logging via ",(0,s.jsx)(n.a,{href:"https://docs.rs/tracing/latest/tracing/",children:"tracing"})," crate."]}),"\n",(0,s.jsx)(n.p,{children:"The connector are implemented as Rust libraries, and these are loaded dynamically during the runtime initialization process."}),"\n",(0,s.jsxs)(n.p,{children:["Internally, ",(0,s.jsx)(n.a,{href:"https://github.com/OpenByteDev/dlopen2",children:"dlopen2"})," provides a safe and efficient way of loading the plugins via C FFI."]}),"\n",(0,s.jsx)(n.p,{children:"By default, runtime will look for the configuration file, to decide which connectors to load and how to configure them."}),"\n",(0,s.jsx)(n.p,{children:"The minimal viable configuration requires at least the Iggy credentials, to create 2 separate instances of producer & consumer connections and the state directory path where source connectors can store their optional state."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[iggy]\naddress = "localhost:8090"\nusername = "iggy"\npassword = "iggy"\n# token = "secret" # Personal Access Token (PAT) can be used instead of username and password\n\n[state]\npath = "local_state"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["All the other config sections start either with ",(0,s.jsx)(n.code,{children:"sources"})," or ",(0,s.jsx)(n.code,{children:"sinks"})," depending on the connector type."]}),"\n",(0,s.jsxs)(n.p,{children:["Keep in mind that either of ",(0,s.jsx)(n.code,{children:"toml"}),", ",(0,s.jsx)(n.code,{children:"yaml"}),", or ",(0,s.jsx)(n.code,{children:"json"})," formats are supported for the configuration file. The path to the configuration can be overriden by ",(0,s.jsx)(n.code,{children:"IGGY_CONNECTORS_CONFIG_PATH"})," environment variable. Each configuration section can be also additionally updated by using the following convention ",(0,s.jsx)(n.code,{children:"IGGY_CONNECTORS_SECTION_NAME.KEY_NAME"})," e.g. ",(0,s.jsx)(n.code,{children:"IGGY_CONNECTORS_IGGY_USERNAME"})," and so on."]}),"\n",(0,s.jsx)(n.h2,{id:"http-api",children:"HTTP API"}),"\n",(0,s.jsxs)(n.p,{children:["Connector runtime has an optional HTTP API that can be enabled by setting the ",(0,s.jsx)(n.code,{children:"enabled"})," flag to ",(0,s.jsx)(n.code,{children:"true"})," in the ",(0,s.jsx)(n.code,{children:"[http_api]"})," section."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[http_api] # Optional HTTP API configuration\nenabled = true\naddress = "127.0.0.1:8081"\n# api_key = "secret" # Optional API key for authentication to be passed as `api-key` header\n\n[http_api.cors] # Optional CORS configuration for HTTP API\nenabled = false\nallowed_methods = ["GET", "POST", "PUT", "DELETE"]\nallowed_origins = ["*"]\nallowed_headers = ["content-type"]\nexposed_headers = [""]\nallow_credentials = false\nallow_private_network = false\n\n[http_api.tls] # Optional TLS configuration for HTTP API\nenabled = false\ncert_file = "core/certs/iggy_cert.pem"\nkey_file = "core/certs/iggy_key.pem"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Currently, it does expose the following endpoints:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"GET /"}),": welcome message."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"GET /health"}),": health status of the runtime."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"GET /sinks"}),": list of sinks."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"GET /sinks/{key}"}),": sink details."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"GET /sinks/{key}/config"}),": sink config, including the optional ",(0,s.jsx)(n.code,{children:"format"})," query parameter to specify the config format."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"GET /sinks/{key}/transforms"}),": sink transforms to be applied to the fields."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"GET /sources"}),": list of sources."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"GET /sources/{key}"}),": source details."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"GET /sources/{key}/config"}),": source config, including the optional ",(0,s.jsx)(n.code,{children:"format"})," query parameter to specify the config format."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"GET /sources/{key}/transforms"}),": source transforms to be applied to the fields."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var o=t(6540);const s={},i=o.createContext(s);function r(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);